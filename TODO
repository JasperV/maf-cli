"start": "babel-node lib/cli.js",
"cli": "babel-node index.js",
"install": "babel-node lib/install.js",
"dev": "nodemon lib/cli.js --exec babel-node",
"lint": "eslint lib/**.js",
"test": "npm run lint",
"build": "babel lib -d dist && babel index.js -d dist",
"prepublish": "pkg-ok",
"postinstall": "dist/install.js"


"blessed": "0.1.81",
    "blessed-contrib": "4.8.5",
    "copy-dir": "0.3.0",
    "dotenv": "4.0.0",
    "interpret": "1.1.0",
    "liftoff": "2.5.0",
    "maf-metadata": "github:jasperv/maf-metadata",
    "maf3-sdk": "github:metrological/maf3-sdk",
    "minimist": "1.2.0",
    "please-upgrade-node": "3.0.1"


post install -> create app skeleton -> module
work like gulp - require global install + local in project
  https://github.com/js-cli/js-liftoff
messages on current dir not maf app/repo
sdk winston log last items ... - - ???
fancy pants output on terminal
try to work around current sdk - ergo, make THIS the SDK;
  - use only public maf.js lib
  - create proxy module
  - refer properly to docs and src
https://github.com/yeoman/update-notifier
https://medium.freecodecamp.org/node-js-child-processes-everything-you-need-to-know-e69498fe970a
add ngrok to sdk as option, like maf-docs - combine with https://github.com/zeit/serve
auto open in chrome tab - autostart app - maf autostart function
allow hotreloading when editing code - e.g. watch files etc...
monitor chrome tab for memory usage
.sh install from internet
eslint-plugin-unicorn
use compiler
sdk use all available cores - also compiler
remove keys from sdk and completely refactor it


various:
inquirer
command
blessed
clui
terminal-kit
vorpal
figlet
https://www.sitepoint.com/javascript-command-line-interface-cli-node-js/
