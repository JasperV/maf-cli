'use strict'

const util = require( 'util' )
const Undertaker = require( 'undertaker' )
const vfs = require( 'vinyl-fs' )
// const watch = require( 'glob-watcher' )

function MAF() {
  Undertaker.call( this )

  // this.watch = this.watch.bind(this);
  this.task = this.task.bind( this )
  this.series = this.series.bind( this )
  this.registry = this.registry.bind( this )
  this.tree = this.tree.bind( this )
  this.lastRun = this.lastRun.bind( this )
}

util.inherits( MAF, Undertaker )

MAF.prototype.src = vfs.src
MAF.prototype.dest = vfs.dest

// MAF.prototype.watch = function( glob, opt, task ) {
//   if (
//     typeof opt === 'string' ||
//     typeof task === 'string' ||
//     Array.isArray( opt ) ||
//     Array.isArray( task )
//   ) {
//     throw new Error( `watching ${glob}: watch task has to be a function
//                       (optionally generated by using maf.series)` )
//   }

//   if ( typeof opt === `function` ) {
//     task = opt
//     opt = {}
//   }

//   opt = opt || {}

//   // let fn
//   // if ( typeof task === `function` ) fn = this.parallel( task )

//   return watch( glob, opt, /*fn*/ )
// }

MAF.prototype.MAF = MAF

module.exports = new MAF
